model_1 = state_model( 
    number_of_states = 5,
    transition_rates = (((1,0),k10),
			((2,1),k21),
			((3,2),k32),
		        ((3,4),k34),
			((4,3),k43)),
    agonist_transition_rates=(((0,1),k01),
			      ((1,2),k12),
			      ((2,3),k23)),
    conductances= ((4,g)))
)


Model_1 = State_Model ( number_of_states = 5,  transition_rates = ( ( ( 1, 0 ), "koff" ) ,( ( 2, 1 ), "2*koff" ) , (( 3, 2 ), "3*koff" ) , ( ( 3, 4 ), "beta" ),  ( ( 4, 3 ), "alfa" ) ) , agonist_transitions_rates = ( ( (  0,  1 ) ,"3*kon" ) ,( (  1,  2 ), "2*kon" ), ( (  2 , 3 ) ,"kon" ) ),   conductances = ( ( 4,  "g") ) )


data = load (filename= "/home/lmoffatt/Code/macro_dr/macro_dr/Moffatt_Hume_2007_ATP.txt")


param_1_MH =  ( kon=  6.09, koff=   212, beta= 1681, alfa= 54, g=16.59e-3, Number_of_Channels= 100, gaussian_noise= 1.0e-5)

paramPrior_1 = ( 
    kon=  (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    koff= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    beta= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    alfa= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    g= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    gaussian_noise= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )),
    Number_of_Channels= (transformation= log10, distribution=normal(mean = 2, variance =  2 ), range=(min = -6, max = 8 )))
    

experiment = to_experiment (filename= "/home/lmoffatt/Code/macro_dr/macro_dr/Moffatt_Hume_2007_ATP.txt",
                         holding_potential = -60.0, frequency_of_sampling = 50E3)


mySimulation = simulate (initseed = 3034446629  singleLigandExperiment = experiment  State_Model = Model_1   model_parameters = param_1_MH   number_of_sub_intervals = 100 min_probability = 1e-9 tolerance_error=1e-4 max_dt = 1e-4 )

d = to_dataframe ( experiment	 = mySimulation )

result = write (variable = d  filename = "Model_1_Sim.txt" )


logLik = likelihood ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroDMR" min_probability = 1e-9 tolerance_error=1e-5  Binomial_threshold = 0  Variance_threshold = 1 )


evidence_works = evidence_derivative (id_file="derivative_param" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2 nSamples = 10000  state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 6} } )

//evidence_works = evidence_emcee ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  parameters_output = 0  gradient_output = 0  numWalkers = 8  target_prob = 0.2  n_trials_at_init = 100  id_file= "emcee" )

//evidence_works = evidence_emcee ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 1.0   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  parameters_output = 0  gradient_output = 0  numWalkers = 8  target_prob = 0.2  n_trials_at_init = 100 )


evidence_works = evidence_emcee (id_file="emcee_02all"  singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 1.0   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  parameters_output = 0  gradient_output = 0  numWalkers = 16  target_prob = 0.2  n_trials_at_init = 1000 )


//evidence_works = evidence_derivative (id_file="derivative_prob_0" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0 nSamples = 10000  parameters_output = 0  gradient_output = 0)

evidence_works = evidence_derivative (id_file="derivative_prob_02" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0.2 nSamples = 10000  parameters_output = 0  gradient_output = 0)
//evidence_works = evidence ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5  eps_G = 1e-4 eps_factor =10 min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2 nSamples = 10000  parameters_output = 0  gradient_output = 0)

